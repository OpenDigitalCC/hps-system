__guard_source || return

# generate_opensvc_conf
# ---------------------
# Emit an OpenSVC agent config to STDOUT (does NOT write to disk).
# Sources ONLY:
#   - host_config "<mac>" get <KEY>
#   - cluster_config get <KEY>
#
# Usage:
#   generate_opensvc_conf <mac>
#   generate_opensvc_conf       # auto-detect MAC from default route iface (best-effort)

generate_opensvc_conf() {
  local mac="$1"

  # Host-scoped
  local osvc_nodename osvc_type osvc_tags
  osvc_nodename="$(host_config "$mac" get HOSTNAME 2>/dev/null || true)"
  osvc_type="$(host_config "$mac" get TYPE 2>/dev/null || true)"

  # Fallback nodename if missing
  if [[ -z "$osvc_nodename" ]]; then
    osvc_nodename="$(hostname -s 2>/dev/null || echo "node-${mac//:/}")"
  fi

  # TYPE → tags
  case "${osvc_type^^}" in
    SCH) osvc_tags="storage zfs" ;;
    TCH|CCH) osvc_tags="compute" ;;
    "") osvc_tags="" ;;
    *)  osvc_tags="$(echo "$osvc_type" | tr '[:upper:]' '[:lower:]')" ;;
  esac

  # Cluster-scoped
  local osvc_log_level osvc_listener_port osvc_web_ui osvc_web_port osvc_hb_interval osvc_hb_timeout
  local osvc_templates_url osvc_packages_url
  osvc_log_level="$(cluster_config get OSVC_LOG_LEVEL 2>/dev/null || echo info)"
  osvc_listener_port="$(cluster_config get OSVC_LISTENER_PORT 2>/dev/null || echo 7024)"
  osvc_web_ui="$(cluster_config get OSVC_WEB_UI 2>/dev/null || echo yes)"
  osvc_web_port="$(cluster_config get OSVC_WEB_PORT 2>/dev/null || echo 7023)"
  osvc_hb_interval="$(cluster_config get OSVC_HB_INTERVAL 2>/dev/null || echo 5)"
  osvc_hb_timeout="$(cluster_config get OSVC_HB_TIMEOUT 2>/dev/null || echo 15)"
  osvc_templates_url="$(cluster_config get OSVC_TEMPLATES_URL 2>/dev/null || echo)"
  osvc_packages_url="$(cluster_config get OSVC_PACKAGES_URL 2>/dev/null || echo)"

  # Static paths (adjust if your install differs)
  local conf_dir="/etc/opensvc"
  local var_dir="/var/lib/opensvc"
  local log_file="/var/log/opensvc/agent.log"
  local auth_key_file="/etc/opensvc/agent.key"

  cat <<EOF
# OpenSVC Agent Node Configuration (generated by HPS)
# Node metadata comes from host_config/cluster_config.

# Generate the file to go here: /etc/opensvc/opensvc.conf
# will include data from host conf and cluster conf

#    [agent] section → core node runtime settings
#    [repo] section → where to get templates & packages (for offline HPS use, you’d point to your local mirror)
#    [stats] → optional, for pushing usage stats
#    Tags here are local tags — cluster-wide tags should live in cluster.conf
#    You almost never need to define services_dir here unless using a custom layout — default is ${conf_dir}/services


[agent]
nodename = ${osvc_nodename}
tags = ${osvc_tags}
conf_dir = ${conf_dir}
var_dir = ${var_dir}
log_file = ${log_file}
log_level = ${osvc_log_level}
listener_port = ${osvc_listener_port}
web_ui = ${osvc_web_ui}
web_ui_port = ${osvc_web_port}
hb_interval = ${osvc_hb_interval}
hb_timeout  = ${osvc_hb_timeout}
auth_key_file = ${auth_key_file}

[repo]
templates_url = ${osvc_templates_url}
packages_url  = ${osvc_packages_url}

[stats]
enable = yes
push_interval = 60
EOF
}




